#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

//[_QWERTY] = LAYOUT(
        default_layer {
            bindings = <
&kp CAPS      &kp N1  &kp N2    &kp N3    &kp N4    &kp N5                  &kp N6  &kp N7    &kp N8    &kp N9   &kp N0   &kp LC(BSPC)
&kp TAB       &kp Q   &kp W     &kp E     &kp R     &kp T                   &kp Y   &kp U     &kp I     &kp O    &kp P    &kp LBRC
&mt LSHFT ESC &kp A   &kp S     &kp D     &kp F     &kp G                   &kp H   &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LCTRL     &kp Z   &kp X     &kp C     &kp V     &kp B                   &kp N   &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
&none         &none   &kp NUBS  &kp LGUI                                                      &none     &none    &none    &none
                                          &kp LALT  &kp ENTER  &mo 1  &mo 2 &kp RET &kp RALT
            >;
        };

//[_LOWER] = LAYOUT(
        Layer__1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans               &trans   &trans     &trans   &trans     &trans &kp MINUS
&trans  &trans  &trans  &trans  &trans  &trans               &trans   &kp KP_N7  &kp UP   &kp KP_N9  &trans &kp RBRC
&trans  &trans  &trans  &trans  &trans  &trans               &trans   &kp LEFT   &kp DOWN &kp RIGHT  &trans &kp NUHS
&trans  &trans  &trans  &trans  &trans  &trans               &trans   &kp KP_N1  &trans   &kp KP_N3  &trans &trans
&trans  &trans  &trans  &trans                                                   &trans   &trans     &trans &trans
                                &trans  &trans &trans &trans &kp DEL  &trans
            >;
        };

//[_RAISE] = LAYOUT(
        Layer__2 {
            bindings = <
&trans  &kp F1    &kp F2    &kp F3    &kp F4  &kp F5                    &kp F6        &kp F7        &kp F8      &kp F9    &kp F10   &kp MINUS
&trans  &kp F11   &kp UP    &kp F12   &trans  &trans                    &trans        &trans        &trans      &trans    &kp PSCRN &kp RBRC
&trans  &kp LEFT  &kp DOWN  &kp RIGHT &trans  &trans                    &trans        &trans        &trans      &kp HOME  &kp PG_UP &kp NUHS
&trans  &trans    &trans    &trans    &trans  &ext_power EP_ON          &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &kp END   &kp PG_DN &trans
&trans  &trans    &trans    &trans                                                                  &trans      &trans    &trans    &trans
                                      &trans  &kp BSPC  &trans  &trans  &trans        &trans
            >;
        };

//[_ADJUST] = LAYOUT(
        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                    &none &none &none &none &none &none
&none       &rgb_ug RGB_SPI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                 &none &none &none &none &none &none
&none       &rgb_ug RGB_SPD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                 &none &none &none &none &none &none
&none       &none           &out OUT_BLE    &out OUT_USB    &none           &none                           &none &none &none &none &none &none
&none       &none           &none           &none                                                                       &none &none &none &none
                                                            &none           &none           &trans  &trans  &none &none
            >;
        };
    };
};

// vim: nowrap syntax=c
